from datetime import datetime

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, BotCommand

kb_manage_channel_inline = InlineKeyboardMarkup(row_width=2)

add_channel_inline = InlineKeyboardButton(text='–î–æ–¥–∞—Ç–∏ –∫–∞–Ω–∞–ª', callback_data='–î–æ–¥–∞—Ç–∏ –∫–∞–Ω–∞–ª')
del_channel = InlineKeyboardButton(text='‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞–Ω–∞–ª', callback_data='–í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞–Ω–∞–ª')
channel_list = InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª—ñ–≤', callback_data='–°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª—ñ–≤')

kb_manage_channel_inline.add(add_channel_inline, del_channel, channel_list)

main_kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
channel_menu = KeyboardButton(text='–ö–∞–Ω–∞–ª–∏')
create_post = KeyboardButton(text='–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç')
edit_post = KeyboardButton(text='–ó–º—ñ–Ω–∏—Ç–∏ –ø–æ—Å—Ç')
media_base = KeyboardButton(text='–ë–∞–∑–∞ –º–µ–¥—ñ–∞')
main_kb.add(create_post, channel_menu, edit_post, media_base)

cancel_kb = InlineKeyboardMarkup()
cancel = InlineKeyboardButton(text='–í—ñ–¥–º—ñ–Ω–∞', callback_data='–í—ñ–¥–º—ñ–Ω–∞')
cancel_kb.add(cancel)

post_formatting_kb = InlineKeyboardMarkup(row_width=2)
post_formating_job_kb = InlineKeyboardMarkup(row_width=2)
make_plan = InlineKeyboardButton(text='üóì –ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏', callback_data='–ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏')
post_loop = InlineKeyboardButton(text='üåÄ –ó–∞—Ü–∏–∫–ª–∏—Ç–∏', callback_data='–ó–∞—Ü–∏–∫–ª–∏—Ç–∏')
change_text = InlineKeyboardButton(text='üìÉ –ó–º—ñ–Ω–∏—Ç–∏ —Ç–µ–∫—Å—Ç', callback_data='–ó–º—ñ–Ω–∏—Ç–∏ —Ç–µ–∫—Å—Ç')
post = InlineKeyboardButton(text='–û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –∑–∞—Ä–∞–∑ üöÄ', callback_data='post_now_menu')
del_post = InlineKeyboardButton(text='‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Å—Ç', callback_data='delete_post')
media_settings = InlineKeyboardButton(text='üéû –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –º–µ–¥—ñ–∞', callback_data='–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –º–µ–¥—ñ–∞')

post_formatting_kb.add(make_plan, post_loop, change_text, post)
post_formating_job_kb.add(make_plan, post_loop, change_text, del_post, media_settings, post)

create_post_inline_kb = InlineKeyboardMarkup()
create_post_inline = InlineKeyboardButton(text='–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç', callback_data='–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç')
create_post_inline_kb.add(create_post_inline)

media_choice_kb = InlineKeyboardMarkup(row_width=2)
take_from_db = InlineKeyboardButton(text='–û–±—Ä–∞—Ç–∏ –∑ –±–∞–∑–∏', callback_data='take_from_db')
send_by_self = InlineKeyboardButton(text='–î–æ–¥–∞—Ç–∏ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ', callback_data='send_by_self')
remove_media = InlineKeyboardButton(text='‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –º–µ–¥—ñ–∞', callback_data='remove_media')
back = InlineKeyboardButton(text='¬´ –ù–∞–∑–∞–¥', callback_data='back')
media_choice_kb.add(take_from_db, send_by_self, remove_media)

back_kb = InlineKeyboardMarkup()
back_kb.add(back)

base_manage_panel_kb = InlineKeyboardMarkup(row_width=2)
create_catalog = InlineKeyboardButton(text='–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥', callback_data='–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥')
edit_catalog = InlineKeyboardButton(text='–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥', callback_data='edit_cat')
catalog_list_inline = InlineKeyboardButton(text='–û–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥–∏', callback_data='cat_list')
delete_catalog_inline = InlineKeyboardButton(text='‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥', callback_data='delete_cat')
base_manage_panel_kb.add(create_catalog, edit_catalog, catalog_list_inline, delete_catalog_inline)

add_to_cat_kb = InlineKeyboardMarkup(row_width=3)
add_video_img = InlineKeyboardButton(text='–í—ñ–¥–µ–æ/–§–æ—Ç–æ/GIF', callback_data='–í—ñ–¥–µ–æ/–§–æ—Ç–æ/GIF')
add_audio_voice = InlineKeyboardButton(text='–ê—É–¥—ñ–æ/–ì–æ–ª–æ—Å–æ–≤–µ', callback_data='–ê—É–¥—ñ–æ/–ì–æ–ª–æ—Å–æ–≤–µ')
add_file = InlineKeyboardButton(text='–§–∞–π–ª', callback_data='–§–∞–π–ª')
add_to_cat_kb.add(add_video_img, add_audio_voice, add_file)

no_text_kb = InlineKeyboardMarkup()
no_text_kb.add(InlineKeyboardButton(text='–ë–µ–∑ —Ç–µ–∫—Å—Ç—É', callback_data='no_text'))

del_voice_kb = InlineKeyboardMarkup()
del_voice_kb.add(InlineKeyboardButton(text='–¢–∞–∫', callback_data='yes'))
del_voice_kb.add(InlineKeyboardButton(text='–ù—ñ', callback_data='no'))

edit_catalog_kb = InlineKeyboardMarkup()
edit_catalog_kb.add(InlineKeyboardButton(text='–î–æ–¥–∞—Ç–∏ –º–µ–¥—ñ–∞', callback_data='add_cat_media'),
                    InlineKeyboardButton(text='–í–∏–¥–∞–ª–∏—Ç–∏ –º–µ–¥—ñ–∞', callback_data='del_cat_media'))

# remove_media_cat_type = InlineKeyboardMarkup()
video_type = InlineKeyboardButton(text='–í—ñ–¥–µ–æ', callback_data='videos')
photo_type = InlineKeyboardButton(text='–§–æ—Ç–æ', callback_data='photos')
animation_type = InlineKeyboardButton(text='GIF', callback_data='gifs')
voice_type = InlineKeyboardButton(text='–ì–æ–ª–æ—Å–æ–≤–µ', callback_data='voices')
document_type = InlineKeyboardButton(text='–§–∞–π–ª', callback_data='documents')
v_note_type = InlineKeyboardButton(text='–í—ñ–¥–µ–æ–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', callback_data='video_notes')

planning_kb = InlineKeyboardMarkup(row_width=2)
date_choose = InlineKeyboardButton(text='–û–±—Ä–∞—Ç–∏ –¥–∞—Ç—É/—á–∞—Å', callback_data='choose_date')
planning_kb.add(date_choose, media_settings, back)

loop_kb = InlineKeyboardMarkup(row_width=2)
date_choose = InlineKeyboardButton(text='–û–±—Ä–∞—Ç–∏ —á–∞—Å', callback_data='choose_loop_time')
loop_kb.add(date_choose, media_settings, back)

post_now_kb = InlineKeyboardMarkup(row_width=2)
post_now = InlineKeyboardButton(text='–û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –∑–∞—Ä–∞–∑ üöÄ', callback_data='–û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏')
post_now_kb.add(post_now, media_settings, back)

change_post_kb = InlineKeyboardMarkup()
change_post = InlineKeyboardButton(text='–ó–º—ñ–Ω–∏—Ç–∏ –ø–æ—Å—Ç', callback_data='–ó–º—ñ–Ω–∏—Ç–∏ –ø–æ—Å—Ç')
change_post_kb.add(change_post)

change_create_post_kb = InlineKeyboardMarkup()
change_create_post_kb.add(create_post_inline, change_post)

self_or_random_kb = InlineKeyboardMarkup(row_width=2)
random_inline = InlineKeyboardButton(text='–†–∞–Ω–¥–æ–º –º–µ–¥—ñ–∞', callback_data='random_media')
self_media_inline = InlineKeyboardButton(text='–û–±—Ä–∞—Ç–∏ —Å–∞–º–æ–º—É', callback_data='self_media')
self_or_random_kb.add(random_inline, self_media_inline)

loop_media_kb = InlineKeyboardMarkup(row_width=2)
back_loop = InlineKeyboardButton(text='¬´ –ù–∞–∑–∞–¥', callback_data='–ó–∞—Ü–∏–∫–ª–∏—Ç–∏')
loop_media_kb.insert(take_from_db)
loop_media_kb.add(back_loop, remove_media)

planned_media_kb = InlineKeyboardMarkup(row_width=2)
back_planned = InlineKeyboardButton(text='¬´ –ù–∞–∑–∞–¥', callback_data='–ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏')
planned_media_kb.add(take_from_db, send_by_self, back_planned, remove_media)

now_media_kb = InlineKeyboardMarkup(row_width=2)
back_now = InlineKeyboardButton(text='¬´ –ù–∞–∑–∞–¥', callback_data='post_now_menu')
now_media_kb.add(take_from_db, send_by_self, back_now, remove_media)




def add_posts_to_kb(jobs, edit_kb):
    for j in jobs:
        date_p: datetime = j.next_run_time
        job_data = j.kwargs['data']

        if not job_data.get('post_text'):
            job_post_text = ''
        else:
            job_post_text = f'- "{job_data.get("post_text")}"'
        trigger_name = str(j.trigger).split('[')[0]
        if trigger_name == 'date':
            text = f"–ü–æ—Å—Ç {date_p.date()} –æ {date_p.strftime('%H:%M')} {job_post_text}"
        elif trigger_name == 'cron':
            text = f"–ö–æ–∂–Ω–æ–≥–æ –¥–Ω—è –æ {date_p.strftime('%H:%M')} {job_post_text}"
        else:
            text = '–ë–µ–∑ —ñ–º–µ–Ω—ñ'

        edit_kb.add(InlineKeyboardButton(text=text,
                                         callback_data=j.id))


media_types = {"videos": video_type, "photos": photo_type, "gifs": animation_type, "voices": voice_type,
               "documents": document_type, 'video_notes': v_note_type}


def cat_types_kb(cat_data_types):
    kb = InlineKeyboardMarkup()
    for data_type in cat_data_types:
        kb.add(media_types[data_type])
    return kb
